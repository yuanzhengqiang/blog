(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{478:function(t,e,s){"use strict";s.r(e);var r=s(43),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"xmlhttprequest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xmlhttprequest"}},[t._v("#")]),t._v(" "),s("center",[t._v("XMLHttpRequest")])],1),t._v(" "),s("p",[t._v("基本用法:")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://***'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 若设置false, 则为同步请求")]),t._v("\n\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onload")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("e")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("status "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("response"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"设置request-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置request-header"}},[t._v("#")]),t._v(" 设置request header")]),t._v(" "),s("p",[t._v("在发送Ajax请求时,我们可能需要设置一些请求头部信息,比如"),s("code",[t._v("content-type、connection、cookie、accept-xxx")]),t._v("等。"),s("br"),t._v("\nxhr提供了"),s("code",[t._v("setRequestHeader")]),t._v("来允许我们修改请求 header。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setRequestHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DOMString header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DOMString value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("code",[t._v("setRequestHeader")]),t._v("方法的第一个参数不区分大小写;")]),t._v(" "),s("li",[s("code",[t._v("setRequestHeader")]),t._v("方法要在"),s("code",[t._v("open()")]),t._v("和"),s("code",[t._v("send()")]),t._v("之间调用, 否则会报错;")]),t._v(" "),s("li",[s("code",[t._v("setRequestHeader")]),t._v("方法可以多次调用, 最终的值不会采用覆盖override的方式, 而是采用追加append的方式。")])]),t._v(" "),s("h2",{attrs:{id:"获取response-header"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取response-header"}},[t._v("#")]),t._v(" 获取response header")]),t._v(" "),s("p",[t._v("xhr提供了2个用来获取响应头部的方法: "),s("code",[t._v("getAllResponseHeaders")]),t._v("和"),s("code",[t._v("getResponseHeader")]),t._v("。前者是获取 response 中的所有header 字段, 后者只是获取某个指定 header 字段的值。另外, getResponseHeader(header)的header参数不区分大小写。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("DOMString "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAllResponseHeaders")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nDOMString "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResponseHeader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DOMString header"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("a",{attrs:{href:"https://www.w3.org/TR/XMLHttpRequest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C的 xhr 标准"),s("OutboundLink")],1),t._v("中做了限制, 规定客户端无法获取 response 中的 Set-Cookie、Set-Cookie2这2个字段, 无论是同域还是跨域请求;")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.w3.org/TR/cors/#access-control-allow-credentials-response-header",target:"_blank",rel:"noopener noreferrer"}},[t._v("W3C 的 cors 标准"),s("OutboundLink")],1),t._v("对于跨域请求也做了限制,规定对于跨域请求, 客户端允许获取的response header字段只限于“"),s("code",[t._v("simple response header")]),t._v("”和“"),s("code",[t._v("Access-Control-Expose-Headers")]),t._v("” ;")])]),t._v(" "),s("blockquote",[s("p",[t._v('"simple response header"包括的 header 字段有：Cache-Control,Content-Language,Content-Type,Expires,Last-Modified,Pragma;\n"Access-Control-Expose-Headers"：首先得注意是"Access-Control-Expose-Headers"进行跨域请求时响应头部中的一个字段,对于同域请求,响应头部是没有这个字段的。这个字段中列举的 header 字段就是服务器允许暴露给客户端访问的字段。')])]),t._v(" "),s("h2",{attrs:{id:"指定xhr-response的数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定xhr-response的数据类型"}},[t._v("#")]),t._v(" 指定xhr.response的数据类型")]),t._v(" "),s("p",[t._v("xhr中提供了两种方法:")]),t._v(" "),s("ul",[s("li",[t._v("xhr.overrideMimeType()")]),t._v(" "),s("li",[t._v("xhr.responseType")])]),t._v(" "),s("h3",{attrs:{id:"xhr-overridemimetype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xhr-overridemimetype"}},[t._v("#")]),t._v(" xhr.overrideMimeType()")]),t._v(" "),s("p",[s("code",[t._v("overrideMimeType")]),t._v("是xhr level 1就有的方法, 所以浏览器兼容性良好。这个方法的作用就是用来重写response的content-type, 这样做有什么意义呢? 比如：server 端给客户端返回了一份document或者是 xml文档,我们希望最终通过"),s("code",[t._v("xhr.response")]),t._v("拿到的就是一个DOM对象, 那么就可以用"),s("code",[t._v("xhr.overrideMimeType('text/xml; charset = utf-8')")]),t._v("来实现。")]),t._v(" "),s("h3",{attrs:{id:"xhr-responsetype"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xhr-responsetype"}},[t._v("#")]),t._v(" xhr.responseType")]),t._v(" "),s("p",[s("code",[t._v("responseType")]),t._v("是xhr level 2新增的属性, 用来指定xhr.response的数据类型, 目前还存在些兼容性问题,")]),t._v(" "),s("h2",{attrs:{id:"获取response数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取response数据"}},[t._v("#")]),t._v(" 获取response数据")]),t._v(" "),s("p",[t._v("xhr提供了3个属性来获取请求返回的数据, 分别是："),s("code",[t._v("xhr.response、xhr.responseText、xhr.responseXML")]),t._v(";")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("xhr.response")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('默认值：空字符串""')])]),t._v(" "),s("li",[s("p",[t._v("当请求完成时,此属性才有正确的值")])]),t._v(" "),s("li",[s("p",[t._v('请求未完成时,此属性的值可能是""或者 null,具体与 xhr.responseType有关：当responseType为""或"text"时,值为""；responseType为其他值时,值为 null')])])])]),t._v(" "),s("li",[s("p",[t._v("xhr.responseText")]),t._v(" "),s("ul",[s("li",[s("p",[t._v('默认值为空字符串""')])]),t._v(" "),s("li",[s("p",[t._v('只有当 responseType 为"text"、""时, xhr对象上才有此属性,此时才能调用xhr.responseText,否则抛错')])]),t._v(" "),s("li",[s("p",[t._v('只有当请求成功时,才能拿到正确值。以下2种情况下值都为空字符串""：请求未完成、请求失败')])])])]),t._v(" "),s("li",[s("p",[t._v("xhr.responseXML")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("默认值为 null")])]),t._v(" "),s("li",[s("p",[t._v('只有当 responseType 为"text"、""、"document"时,xhr对象上才有此属性,此时才能调用xhr.responseXML,否则抛错')])]),t._v(" "),s("li",[s("p",[t._v("只有当请求成功且返回数据被正确解析时,才能拿到正确值。以下3种情况下值都为null：请求未完成、请求失败、请求成功但返回数据无法被正确解析时")])])])])]),t._v(" "),s("h2",{attrs:{id:"追踪ajax请求状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#追踪ajax请求状态"}},[t._v("#")]),t._v(" 追踪ajax请求状态")]),t._v(" "),s("p",[t._v("用"),s("code",[t._v("xhr.readyState")]),t._v("这个属性即可追踪到。这个属性是只读属性, 总共有5种可能值, 分别对应xhr不同的不同阶段。每次"),s("code",[t._v("xhr.readyState")]),t._v("的值发生变化时,都会触发"),s("code",[t._v("xhr.onreadystatechange")]),t._v("事件,我们可以在这个事件中进行相关状态判断。")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("值")]),t._v(" "),s("th",[t._v("状态")]),t._v(" "),s("th",[t._v("描述")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("0")]),t._v(" "),s("td",[t._v("UNSENT (初始状态,未打开)")]),t._v(" "),s("td",[t._v("此时xhr对象被成功构造,open()方法还未被调用")])]),t._v(" "),s("tr",[s("td",[t._v("1")]),t._v(" "),s("td",[t._v("OPENED (已打开,未发送)")]),t._v(" "),s("td",[t._v("open()方法已被成功调用,send()方法还未被调用。注意：只有xhr处于OPENED状态,才能调用xhr.setRequestHeader()和xhr.send(),否则会报错")])]),t._v(" "),s("tr",[s("td",[t._v("2")]),t._v(" "),s("td",[t._v("HEADERS_RECEIVED (已获取响应头)")]),t._v(" "),s("td",[t._v("send()方法已经被调用, 响应头和响应状态已经返回")])]),t._v(" "),s("tr",[s("td",[t._v("3")]),t._v(" "),s("td",[t._v("LOADING (正在下载响应体)")]),t._v(" "),s("td",[t._v("响应体(response entity body)正在下载中,此状态下通过xhr.response可能已经有了响应数据")])]),t._v(" "),s("tr",[s("td",[t._v("4")]),t._v(" "),s("td",[t._v("DONE (整个数据传输过程结束)")]),t._v(" "),s("td",[t._v("整个数据传输过程结束,不管本次请求是成功还是失败")])])])]),t._v(" "),s("h2",{attrs:{id:"设置超时时间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置超时时间"}},[t._v("#")]),t._v(" 设置超时时间")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timeout\n")])])]),s("h2",{attrs:{id:"获取上传、下载进度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取上传、下载进度"}},[t._v("#")]),t._v(" 获取上传、下载进度")]),t._v(" "),s("p",[t._v("有时根据产品需求, 需要对上传或下载的文件显示实时进度, 这时我们可以通过 "),s("code",[t._v("onprogress")]),t._v(" 事件来显示进度, 默认该事件每 50ms 触发一次.")]),t._v(" "),s("ul",[s("li",[t._v("上传触发的是"),s("code",[t._v("xhr.upload")]),t._v("对象的"),s("code",[t._v("onprogress")]),t._v("事件")]),t._v(" "),s("li",[t._v("下载触发的是xhr对象的"),s("code",[t._v("onprogress")]),t._v("事件")])]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("xhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onprogress "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updateProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("upload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("onprogress "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" updateProgress"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("updateProgress")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("event")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lengthComputable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" completedPercent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loaded "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h2",{attrs:{id:"xhr-withcredentials与-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xhr-withcredentials与-cors"}},[t._v("#")]),t._v(" xhr.withCredentials与 CORS")]),t._v(" "),s("blockquote",[s("p",[t._v("我们都知道,在发同域请求时,浏览器会将cookie自动加在request header中。但大家是否遇到过这样的场景：在发送跨域请求时,cookie并没有自动加在request header中。")])]),t._v(" "),s("p",[t._v('造成这个问题的原因是：在CORS标准中做了规定,默认情况下,浏览器在发送跨域请求时,不能发送任何认证信息（credentials）如"'),s("code",[t._v("cookies")]),t._v('"和"'),s("code",[t._v("HTTP authentication schemes")]),t._v('"。除非'),s("code",[t._v("xhr.withCredentials")]),t._v("为true（xhr对象有一个属性叫"),s("code",[t._v("withCredentials")]),t._v(",默认值为false）。")]),t._v(" "),s("p",[t._v("所以根本原因是cookies也是一种认证信息,在跨域请求中,client端必须手动设置"),s("code",[t._v("xhr.withCredentials=true")]),t._v(",且server端也必须允许request能携带认证信息（即response header中包含"),s("code",[t._v("Access-Control-Allow-Credentials:true")]),t._v("）,这样浏览器才会自动将cookie加在request header中。")]),t._v(" "),s("p",[t._v("另外,要特别注意一点,一旦跨域request能够携带认证信息,server端一定不能将"),s("code",[t._v("Access-Control-Allow-Origin")]),t._v("设置为*,而必须设置为请求页面的域名。")]),t._v(" "),s("h2",{attrs:{id:"xhr事件触发条件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xhr事件触发条件"}},[t._v("#")]),t._v(" xhr事件触发条件")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("事件")]),t._v(" "),s("th",[t._v("触发条件")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("onreadystatechange")]),t._v(" "),s("td",[t._v("每当xhr.readyState改变时触发；但xhr.readyState由非0值变为0时不触发。")])]),t._v(" "),s("tr",[s("td",[t._v("onloadstart")]),t._v(" "),s("td",[t._v("调用xhr.send()方法后立即触发,若xhr.send()未被调用则不会触发此事件。")])]),t._v(" "),s("tr",[s("td",[t._v("onprogress")]),t._v(" "),s("td",[t._v("xhr.upload.onprogress在上传阶段(即xhr.send()之后,xhr.readystate=2之前)触发,每50ms触发一次；xhr.onprogress在下载阶段（即xhr.readystate=3时）触发,每50ms触发一次。")])]),t._v(" "),s("tr",[s("td",[t._v("onload")]),t._v(" "),s("td",[t._v("当请求成功完成时触发,此时xhr.readystate=4")])]),t._v(" "),s("tr",[s("td",[t._v("onloadend")]),t._v(" "),s("td",[t._v("当请求结束（包括请求成功和请求失败）时触发")])]),t._v(" "),s("tr",[s("td",[t._v("onabort")]),t._v(" "),s("td",[t._v("当调用xhr.abort()后触发")])]),t._v(" "),s("tr",[s("td",[t._v("ontimeout")]),t._v(" "),s("td",[t._v("xhr.timeout不等于0,由请求开始即onloadstart开始算起,当到达xhr.timeout所设置时间请求还未结束即onloadend,则触发此事件。")])]),t._v(" "),s("tr",[s("td",[t._v("onerror")]),t._v(" "),s("td",[t._v("在请求过程中,若发生Network error则会触发此事件（若发生Network error时,上传还没有结束,则会先触发xhr.upload.onerror,再触发xhr.onerror；若发生Network error时,上传已经结束,则只会触发xhr.onerror）。注意,只有发生了网络层级别的异常才会触发此事件,对于应用层级别的异常,如响应返回的xhr.statusCode是4xx时,并不属于Network error,所以不会触发onerror事件,而是会触发onload事件。")])])])]),t._v(" "),s("h3",{attrs:{id:"触发顺序"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#触发顺序"}},[t._v("#")]),t._v(" 触发顺序")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.onreadystatechange")]),t._v(" // 之后每次readyState变化时,都会触发一次")])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.onloadstart")]),t._v(" // 上传阶段开始：")])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.upload.onloadstart")])])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.upload.onprogress")])])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.upload.onload")])])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.upload.onloadend")]),t._v(" // 上传结束,下载阶段开始：")])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.onprogress")]),t._v(",")])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.onload")])])]),t._v(" "),s("li",[s("p",[t._v("触发"),s("code",[t._v("xhr.onloadend")])])])]),t._v(" "),s("Valine")],1)}),[],!1,null,null,null);e.default=a.exports}}]);